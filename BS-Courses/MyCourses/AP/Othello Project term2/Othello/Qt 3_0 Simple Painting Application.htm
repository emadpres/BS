<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0050)http://doc.trolltech.com/3.0/scribble-example.html -->
<!-- /home/reggie/tmp/qt-3.0-reggie-26208/qt-x11-free-3.0.6/examples/scribble/scribble.doc:5 --><HTML><HEAD><TITLE>Qt 3.0: Simple Painting Application</TITLE>
<SCRIPT type=text/javascript 
src="Qt%203_0%20Simple%20Painting%20Application_files/__utm.js">&nbsp;</SCRIPT>

<META content="text/html; charset=utf-8" http-equiv=Content-Type>
<STYLE type=text/css>H3.fn {
	TEXT-INDENT: -1cm; MARGIN-LEFT: 1cm
}
SPAN.fn {
	TEXT-INDENT: -1cm; MARGIN-LEFT: 1cm
}
A:link {
	COLOR: #004faf; TEXT-DECORATION: none
}
A:visited {
	COLOR: #672967; TEXT-DECORATION: none
}
BODY {
	BACKGROUND: #ffffff; COLOR: black
}
</STYLE>

<META name=GENERATOR content="MSHTML 8.00.7600.16385"></HEAD>
<BODY>
<TABLE border=0 cellSpacing=0 cellPadding=0 width="100%">
  <TBODY>
  <TR bgColor=#e5e5e5>
    <TD vAlign=center><A href="http://doc.trolltech.com/3.0/index.html"><FONT 
      color=#004faf>Home</FONT></A> | <A 
      href="http://doc.trolltech.com/3.0/classes.html"><FONT 
      color=#004faf>All&nbsp;Classes</FONT></A> | <A 
      href="http://doc.trolltech.com/3.0/mainclasses.html"><FONT 
      color=#004faf>Main&nbsp;Classes</FONT></A> | <A 
      href="http://doc.trolltech.com/3.0/annotated.html"><FONT 
      color=#004faf>Annotated</FONT></A> | <A 
      href="http://doc.trolltech.com/3.0/groups.html"><FONT 
      color=#004faf>Grouped&nbsp;Classes</FONT></A> | <A 
      href="http://doc.trolltech.com/3.0/functions.html"><FONT 
      color=#004faf>Functions</FONT></A> </TD>
    <TD vAlign=center align=right><IMG border=0 align=right 
      src="Qt%203_0%20Simple%20Painting%20Application_files/logo32.png" width=64 
      height=32></TD></TR></TBODY></TABLE>
<H1 align=center>Simple Painting Application</H1>
<P>This example implements the famous scribble example. You can draw around in 
the canvas with different pens and save the result as picture. 
<P>
<HR>

<P>Header file: 
<P><PRE>/****************************************************************************
** $Id:  qt/scribble.h   3.0.6   edited Oct 12 2001 $
**
** Copyright ( C ) 1992-2000 Trolltech AS.  All rights reserved.
**
** This file is part of an example program for Qt.  This example
** program may be used, distributed and modified without limitation.
**
*****************************************************************************/

#ifndef SCRIBBLE_H
#define SCRIBBLE_H

#include &lt;<A href="http://doc.trolltech.com/3.0/qmainwindow-h.html">qmainwindow.h</A>&gt;
#include &lt;<A href="http://doc.trolltech.com/3.0/qpen-h.html">qpen.h</A>&gt;
#include &lt;<A href="http://doc.trolltech.com/3.0/qpoint-h.html">qpoint.h</A>&gt;
#include &lt;<A href="http://doc.trolltech.com/3.0/qpixmap-h.html">qpixmap.h</A>&gt;
#include &lt;<A href="http://doc.trolltech.com/3.0/qwidget-h.html">qwidget.h</A>&gt;
#include &lt;<A href="http://doc.trolltech.com/3.0/qstring-h.html">qstring.h</A>&gt;
#include &lt;<A href="http://doc.trolltech.com/3.0/qpointarray-h.html">qpointarray.h</A>&gt;

class QMouseEvent;
class QResizeEvent;
class QPaintEvent;
class QToolButton;
class QSpinBox;

class Canvas : public <A href="http://doc.trolltech.com/3.0/qwidget.html">QWidget</A>
{
    <A href="http://doc.trolltech.com/3.0/metaobjects.html#Q_OBJECT">Q_OBJECT</A>

public:
    Canvas( <A href="http://doc.trolltech.com/3.0/qwidget.html">QWidget</A> *parent = 0, const char *name = 0 );

    void setPenColor( const <A href="http://doc.trolltech.com/3.0/qcolor.html">QColor</A> &amp;c )
<A name=x735></A>    { pen.<A href="http://doc.trolltech.com/3.0/qpen.html#setColor">setColor</A>( c ); }

    void setPenWidth( int w )
<A name=x736></A>    { pen.<A href="http://doc.trolltech.com/3.0/qpen.html#setWidth">setWidth</A>( w ); }

    <A href="http://doc.trolltech.com/3.0/qcolor.html">QColor</A> penColor()
<A name=x734></A>    { return pen.<A href="http://doc.trolltech.com/3.0/qpen.html#color">color</A>(); }

    int penWidth()
<A name=x737></A>    { return pen.<A href="http://doc.trolltech.com/3.0/qpen.html#width">width</A>(); }

    void save( const <A href="http://doc.trolltech.com/3.0/qstring.html">QString</A> &amp;filename, const <A href="http://doc.trolltech.com/3.0/qstring.html">QString</A> &amp;format );

    void clearScreen();

protected:
    void mousePressEvent( <A href="http://doc.trolltech.com/3.0/qmouseevent.html">QMouseEvent</A> *e );
    void mouseReleaseEvent( <A href="http://doc.trolltech.com/3.0/qmouseevent.html">QMouseEvent</A> *e );
    void mouseMoveEvent( <A href="http://doc.trolltech.com/3.0/qmouseevent.html">QMouseEvent</A> *e );
    void resizeEvent( <A href="http://doc.trolltech.com/3.0/qresizeevent.html">QResizeEvent</A> *e );
    void paintEvent( <A href="http://doc.trolltech.com/3.0/qpaintevent.html">QPaintEvent</A> *e );

    <A href="http://doc.trolltech.com/3.0/qpen.html">QPen</A> pen;
    <A href="http://doc.trolltech.com/3.0/qpointarray.html">QPointArray</A> polyline;

    bool mousePressed;

    <A href="http://doc.trolltech.com/3.0/qpixmap.html">QPixmap</A> buffer;

};

class Scribble : public <A href="http://doc.trolltech.com/3.0/qmainwindow.html">QMainWindow</A>
{
    Q_OBJECT

public:
    Scribble( <A href="http://doc.trolltech.com/3.0/qwidget.html">QWidget</A> *parent = 0, const char *name = 0 );

protected:
    Canvas* canvas;

    <A href="http://doc.trolltech.com/3.0/qspinbox.html">QSpinBox</A> *bPWidth;
    <A href="http://doc.trolltech.com/3.0/qtoolbutton.html">QToolButton</A> *bPColor, *bSave, *bClear;

protected slots:
    void slotSave();
    void slotColor();
    void slotWidth( int );
    void slotClear();

};

#endif
</PRE>
<P>
<HR>

<P>Implementation: 
<P><PRE>/****************************************************************************
** $Id:  qt/scribble.cpp   3.0.6   edited Oct 12 2001 $
**
** Copyright ( C ) 1992-2000 Trolltech AS.  All rights reserved.
**
** This file is part of an example program for Qt.  This example
** program may be used, distributed and modified without limitation.
**
*****************************************************************************/

#include "scribble.h"

#include &lt;<A href="http://doc.trolltech.com/3.0/qapplication-h.html">qapplication.h</A>&gt;
#include &lt;<A href="http://doc.trolltech.com/3.0/qevent-h.html">qevent.h</A>&gt;
#include &lt;<A href="http://doc.trolltech.com/3.0/qpainter-h.html">qpainter.h</A>&gt;
#include &lt;<A href="http://doc.trolltech.com/3.0/qtoolbar-h.html">qtoolbar.h</A>&gt;
#include &lt;<A href="http://doc.trolltech.com/3.0/qtoolbutton-h.html">qtoolbutton.h</A>&gt;
#include &lt;<A href="http://doc.trolltech.com/3.0/qspinbox-h.html">qspinbox.h</A>&gt;
#include &lt;<A href="http://doc.trolltech.com/3.0/qtooltip-h.html">qtooltip.h</A>&gt;
#include &lt;<A href="http://doc.trolltech.com/3.0/qrect-h.html">qrect.h</A>&gt;
#include &lt;<A href="http://doc.trolltech.com/3.0/qpoint-h.html">qpoint.h</A>&gt;
#include &lt;<A href="http://doc.trolltech.com/3.0/qcolordialog-h.html">qcolordialog.h</A>&gt;
#include &lt;<A href="http://doc.trolltech.com/3.0/qfiledialog-h.html">qfiledialog.h</A>&gt;
#include &lt;<A href="http://doc.trolltech.com/3.0/qcursor-h.html">qcursor.h</A>&gt;
#include &lt;<A href="http://doc.trolltech.com/3.0/qimage-h.html">qimage.h</A>&gt;
#include &lt;<A href="http://doc.trolltech.com/3.0/qstrlist-h.html">qstrlist.h</A>&gt;
#include &lt;<A href="http://doc.trolltech.com/3.0/qpopupmenu-h.html">qpopupmenu.h</A>&gt;
#include &lt;<A href="http://doc.trolltech.com/3.0/qintdict-h.html">qintdict.h</A>&gt;

const bool no_writing = FALSE;

<A name=f322></A>Canvas::Canvas( <A href="http://doc.trolltech.com/3.0/qwidget.html">QWidget</A> *parent, const char *name )
    : <A href="http://doc.trolltech.com/3.0/qwidget.html">QWidget</A>( parent, name, WStaticContents ), pen( Qt::red, 3 ), polyline(3),
      mousePressed( FALSE ), buffer( <A href="http://doc.trolltech.com/3.0/qwidget.html#width">width</A>(), height() )
{

<A name=x739></A><A name=x738></A>    if ((qApp-&gt;<A href="http://doc.trolltech.com/3.0/qapplication.html#argc">argc</A>() &gt; 0) &amp;&amp; !buffer.load(qApp-&gt;<A href="http://doc.trolltech.com/3.0/qapplication.html#argv">argv</A>()[1]))
        buffer.fill( <A href="http://doc.trolltech.com/3.0/qwidget.html#colorGroup">colorGroup</A>().base() );
    <A href="http://doc.trolltech.com/3.0/qwidget.html#setBackgroundMode">setBackgroundMode</A>( QWidget::PaletteBase );
#ifndef QT_NO_CURSOR
    <A href="http://doc.trolltech.com/3.0/qwidget.html#setCursor">setCursor</A>( Qt::crossCursor );
#endif
}

void <A name=f323></A>Canvas::save( const <A href="http://doc.trolltech.com/3.0/qstring.html">QString</A> &amp;filename, const <A href="http://doc.trolltech.com/3.0/qstring.html">QString</A> &amp;format )
{
    if ( !no_writing )
<A name=x775></A>        buffer.save( filename, format.<A href="http://doc.trolltech.com/3.0/qstring.html#upper">upper</A>() );
}

void <A name=f324></A>Canvas::clearScreen()
{
    buffer.fill( <A href="http://doc.trolltech.com/3.0/qwidget.html#colorGroup">colorGroup</A>().base() );
    <A href="http://doc.trolltech.com/3.0/qwidget.html#repaint">repaint</A>( FALSE );
}

<A name=x781></A>void Canvas::<A href="http://doc.trolltech.com/3.0/qwidget.html#mousePressEvent">mousePressEvent</A>( <A href="http://doc.trolltech.com/3.0/qmouseevent.html">QMouseEvent</A> *e )
{
    mousePressed = TRUE;
    polyline[2] = polyline[1] = polyline[0] = e-&gt;<A href="http://doc.trolltech.com/3.0/qmouseevent.html#pos">pos</A>();
}

<A name=x782></A>void Canvas::<A href="http://doc.trolltech.com/3.0/qwidget.html#mouseReleaseEvent">mouseReleaseEvent</A>( <A href="http://doc.trolltech.com/3.0/qmouseevent.html">QMouseEvent</A> * )
{
    mousePressed = FALSE;
}

<A name=x780></A>void Canvas::<A href="http://doc.trolltech.com/3.0/qwidget.html#mouseMoveEvent">mouseMoveEvent</A>( <A href="http://doc.trolltech.com/3.0/qmouseevent.html">QMouseEvent</A> *e )
{
    if ( mousePressed ) {
        <A href="http://doc.trolltech.com/3.0/qpainter.html">QPainter</A> painter;
        painter.<A href="http://doc.trolltech.com/3.0/qpainter.html#begin">begin</A>( &amp;buffer );
        painter.<A href="http://doc.trolltech.com/3.0/qpainter.html#setPen">setPen</A>( pen );
        polyline[2] = polyline[1];
        polyline[1] = polyline[0];
        polyline[0] = e-&gt;<A href="http://doc.trolltech.com/3.0/qmouseevent.html#pos">pos</A>();
<A name=x750></A>        painter.<A href="http://doc.trolltech.com/3.0/qpainter.html#drawPolyline">drawPolyline</A>( polyline );
        painter.<A href="http://doc.trolltech.com/3.0/qpainter.html#end">end</A>();

        <A href="http://doc.trolltech.com/3.0/qrect.html">QRect</A> r = polyline.boundingRect();
<A name=x761></A>        r = r.<A href="http://doc.trolltech.com/3.0/qrect.html#normalize">normalize</A>();
<A name=x764></A><A name=x760></A>        r.<A href="http://doc.trolltech.com/3.0/qrect.html#setLeft">setLeft</A>( r.<A href="http://doc.trolltech.com/3.0/qrect.html#left">left</A>() - penWidth() );
<A name=x767></A><A name=x766></A>        r.<A href="http://doc.trolltech.com/3.0/qrect.html#setTop">setTop</A>( r.<A href="http://doc.trolltech.com/3.0/qrect.html#top">top</A>() - penWidth() );
<A name=x765></A><A name=x762></A>        r.<A href="http://doc.trolltech.com/3.0/qrect.html#setRight">setRight</A>( r.<A href="http://doc.trolltech.com/3.0/qrect.html#right">right</A>() + penWidth() );
<A name=x763></A><A name=x758></A>        r.<A href="http://doc.trolltech.com/3.0/qrect.html#setBottom">setBottom</A>( r.<A href="http://doc.trolltech.com/3.0/qrect.html#bottom">bottom</A>() + penWidth() );

<A name=x770></A><A name=x769></A><A name=x759></A>        <A href="http://doc.trolltech.com/3.0/qpaintdevice.html#bitBlt-2">bitBlt</A>( this, r.<A href="http://doc.trolltech.com/3.0/qrect.html#x">x</A>(), r.<A href="http://doc.trolltech.com/3.0/qrect.html#y">y</A>(), &amp;buffer, r.<A href="http://doc.trolltech.com/3.0/qrect.html#x">x</A>(), r.<A href="http://doc.trolltech.com/3.0/qrect.html#y">y</A>(), r.<A href="http://doc.trolltech.com/3.0/qrect.html#width">width</A>(), r.<A href="http://doc.trolltech.com/3.0/qrect.html#height">height</A>() );
    }
}

<A name=x784></A>void Canvas::<A href="http://doc.trolltech.com/3.0/qwidget.html#resizeEvent">resizeEvent</A>( <A href="http://doc.trolltech.com/3.0/qresizeevent.html">QResizeEvent</A> *e )
{
    QWidget::<A href="http://doc.trolltech.com/3.0/qwidget.html#resizeEvent">resizeEvent</A>( e );

    int w = <A href="http://doc.trolltech.com/3.0/qwidget.html#width">width</A>() &gt; buffer.width() ?
            <A href="http://doc.trolltech.com/3.0/qwidget.html#width">width</A>() : buffer.width();
    int h = <A href="http://doc.trolltech.com/3.0/qwidget.html#height">height</A>() &gt; buffer.height() ?
            <A href="http://doc.trolltech.com/3.0/qwidget.html#height">height</A>() : buffer.height();

    <A href="http://doc.trolltech.com/3.0/qpixmap.html">QPixmap</A> tmp( buffer );
    buffer.resize( w, h );
    buffer.fill( <A href="http://doc.trolltech.com/3.0/qwidget.html#colorGroup">colorGroup</A>().base() );
<A name=x755></A><A name=x754></A>    <A href="http://doc.trolltech.com/3.0/qpaintdevice.html#bitBlt-2">bitBlt</A>( &amp;buffer, 0, 0, &amp;tmp, 0, 0, tmp.<A href="http://doc.trolltech.com/3.0/qpixmap.html#width">width</A>(), tmp.<A href="http://doc.trolltech.com/3.0/qpixmap.html#height">height</A>() );
}

<A name=x783></A>void Canvas::<A href="http://doc.trolltech.com/3.0/qwidget.html#paintEvent">paintEvent</A>( <A href="http://doc.trolltech.com/3.0/qpaintevent.html">QPaintEvent</A> *e )
{
    QWidget::<A href="http://doc.trolltech.com/3.0/qwidget.html#paintEvent">paintEvent</A>( e );

<A name=x753></A>    <A href="http://doc.trolltech.com/3.0/qmemarray.html">QMemArray</A>&lt;QRect&gt; rects = e-&gt;<A href="http://doc.trolltech.com/3.0/qpaintevent.html#region">region</A>().rects();
<A name=x746></A>    for ( uint i = 0; i &lt; rects.<A href="http://doc.trolltech.com/3.0/qmemarray.html#count">count</A>(); i++ ) {
        <A href="http://doc.trolltech.com/3.0/qrect.html">QRect</A> r = rects[(int)i];
        <A href="http://doc.trolltech.com/3.0/qpaintdevice.html#bitBlt-2">bitBlt</A>( this, r.<A href="http://doc.trolltech.com/3.0/qrect.html#x">x</A>(), r.<A href="http://doc.trolltech.com/3.0/qrect.html#y">y</A>(), &amp;buffer, r.<A href="http://doc.trolltech.com/3.0/qrect.html#x">x</A>(), r.<A href="http://doc.trolltech.com/3.0/qrect.html#y">y</A>(), r.<A href="http://doc.trolltech.com/3.0/qrect.html#width">width</A>(), r.<A href="http://doc.trolltech.com/3.0/qrect.html#height">height</A>() );
    }
}

//------------------------------------------------------

<A name=f325></A>Scribble::Scribble( <A href="http://doc.trolltech.com/3.0/qwidget.html">QWidget</A> *parent, const char *name )
    : <A href="http://doc.trolltech.com/3.0/qmainwindow.html">QMainWindow</A>( parent, name )
{
    canvas = new Canvas( this );
    <A href="http://doc.trolltech.com/3.0/qmainwindow.html#setCentralWidget">setCentralWidget</A>( canvas );

    <A href="http://doc.trolltech.com/3.0/qtoolbar.html">QToolBar</A> *tools = new <A href="http://doc.trolltech.com/3.0/qtoolbar.html">QToolBar</A>( this );

    bSave = new <A href="http://doc.trolltech.com/3.0/qtoolbutton.html">QToolButton</A>( QPixmap(), "Save", "Save as PNG image", this, SLOT( slotSave() ), tools );
<A name=x740></A>    bSave-&gt;<A href="http://doc.trolltech.com/3.0/qbutton.html#setText">setText</A>( "Save as..." );

<A name=x776></A>    tools-&gt;<A href="http://doc.trolltech.com/3.0/qtoolbar.html#addSeparator">addSeparator</A>();

    bPColor = new <A href="http://doc.trolltech.com/3.0/qtoolbutton.html">QToolButton</A>( QPixmap(), "Choose Pen Color", "Choose Pen Color", this, SLOT( slotColor() ), tools );
    bPColor-&gt;<A href="http://doc.trolltech.com/3.0/qbutton.html#setText">setText</A>( "Choose Pen Color..." );

    tools-&gt;<A href="http://doc.trolltech.com/3.0/qtoolbar.html#addSeparator">addSeparator</A>();

    bPWidth = new <A href="http://doc.trolltech.com/3.0/qspinbox.html">QSpinBox</A>( 1, 20, 1, tools );
<A name=x777></A>    QToolTip::<A href="http://doc.trolltech.com/3.0/qtooltip.html#add">add</A>( bPWidth, "Choose Pen Width" );
<A name=x772></A>    <A href="http://doc.trolltech.com/3.0/qobject.html#connect">connect</A>( bPWidth, SIGNAL( <A href="http://doc.trolltech.com/3.0/qspinbox.html#valueChanged">valueChanged</A>( int ) ), this, SLOT( slotWidth( int ) ) );
<A name=x771></A>    bPWidth-&gt;<A href="http://doc.trolltech.com/3.0/qspinbox.html#setValue">setValue</A>( 3 );

    tools-&gt;<A href="http://doc.trolltech.com/3.0/qtoolbar.html#addSeparator">addSeparator</A>();

    bClear = new <A href="http://doc.trolltech.com/3.0/qtoolbutton.html">QToolButton</A>( QPixmap(), "Clear Screen", "Clear Screen", this, SLOT( slotClear() ), tools );
    bClear-&gt;<A href="http://doc.trolltech.com/3.0/qbutton.html#setText">setText</A>( "Clear Screen" );
}

void <A name=f326></A>Scribble::slotSave()
{
    <A href="http://doc.trolltech.com/3.0/qpopupmenu.html">QPopupMenu</A> *menu = new <A href="http://doc.trolltech.com/3.0/qpopupmenu.html">QPopupMenu</A>( 0 );
    <A href="http://doc.trolltech.com/3.0/qintdict.html">QIntDict</A>&lt;QString&gt; formats;
<A name=x757></A>    formats.<A href="http://doc.trolltech.com/3.0/qptrcollection.html#setAutoDelete">setAutoDelete</A>( TRUE );

    for ( unsigned int i = 0; i &lt; QImageIO::<A href="http://doc.trolltech.com/3.0/qimageio.html#outputFormats">outputFormats</A>().count(); i++ ) {
<A name=x744></A>        <A href="http://doc.trolltech.com/3.0/qstring.html">QString</A> str = QString( QImageIO::<A href="http://doc.trolltech.com/3.0/qimageio.html#outputFormats">outputFormats</A>().at( i ) );
<A name=x745></A>        formats.<A href="http://doc.trolltech.com/3.0/qintdict.html#insert">insert</A>( menu-&gt;<A href="http://doc.trolltech.com/3.0/qmenudata.html#insertItem">insertItem</A>( QString( "%1..." ).arg( str ) ), new <A href="http://doc.trolltech.com/3.0/qstring.html">QString</A>( str ) );
    }

<A name=x785></A>    menu-&gt;<A href="http://doc.trolltech.com/3.0/qwidget.html#setMouseTracking">setMouseTracking</A>( TRUE );
<A name=x779></A><A name=x778></A><A name=x756></A>    int id = menu-&gt;<A href="http://doc.trolltech.com/3.0/qpopupmenu.html#exec">exec</A>( bSave-&gt;<A href="http://doc.trolltech.com/3.0/qwidget.html#mapToGlobal">mapToGlobal</A>( QPoint( 0, bSave-&gt;<A href="http://doc.trolltech.com/3.0/qwidget.html#height">height</A>() + 1 ) ) );

    if ( id != -1 ) {
        <A href="http://doc.trolltech.com/3.0/qstring.html">QString</A> format = *formats[ id ];

<A name=x774></A>        <A href="http://doc.trolltech.com/3.0/qstring.html">QString</A> filename = QFileDialog::<A href="http://doc.trolltech.com/3.0/qfiledialog.html#getSaveFileName">getSaveFileName</A>( <A href="http://doc.trolltech.com/3.0/qstring.html#QString-null">QString::null</A>, QString( "*.%1" ).arg( format.<A href="http://doc.trolltech.com/3.0/qstring.html#lower">lower</A>() ), this );
        if ( !filename.<A href="http://doc.trolltech.com/3.0/qstring.html#isEmpty">isEmpty</A>() )
            canvas-&gt;save( filename, format );
    }

    delete menu;
}

void <A name=f327></A>Scribble::slotColor()
{
<A name=x742></A>    <A href="http://doc.trolltech.com/3.0/qcolor.html">QColor</A> c = QColorDialog::<A href="http://doc.trolltech.com/3.0/qcolordialog.html#getColor">getColor</A>( canvas-&gt;penColor(), this );
<A name=x741></A>    if ( c.<A href="http://doc.trolltech.com/3.0/qcolor.html#isValid">isValid</A>() )
        canvas-&gt;setPenColor( c );
}

void <A name=f328></A>Scribble::slotWidth( int w )
{
    canvas-&gt;setPenWidth( w );
}

void <A name=f329></A>Scribble::slotClear()
{
    canvas-&gt;clearScreen();
}
</PRE>
<P>
<HR>

<P>Main: 
<P><PRE>/****************************************************************************
** $Id:  qt/main.cpp   3.0.6   edited Oct 12 2001 $
**
** Copyright ( C ) 1992-2000 Trolltech AS.  All rights reserved.
**
** This file is part of an example program for Qt.  This example
** program may be used, distributed and modified without limitation.
**
*****************************************************************************/

#include "scribble.h"
#include &lt;<A href="http://doc.trolltech.com/3.0/qapplication-h.html">qapplication.h</A>&gt;


int main( int argc, char **argv )
{
    <A href="http://doc.trolltech.com/3.0/qapplication.html">QApplication</A> a( argc, argv );

    Scribble scribble;

    scribble.<A href="http://doc.trolltech.com/3.0/qwidget.html#resize">resize</A>( 500, 350 );
    scribble.<A href="http://doc.trolltech.com/3.0/qwidget.html#setCaption">setCaption</A>("Qt Example - Scribble");
    a.<A href="http://doc.trolltech.com/3.0/qapplication.html#setMainWidget">setMainWidget</A>( &amp;scribble );
<A name=x786></A>    if ( QApplication::<A href="http://doc.trolltech.com/3.0/qapplication.html#desktop">desktop</A>()-&gt;width() &gt; 550
         &amp;&amp; QApplication::<A href="http://doc.trolltech.com/3.0/qapplication.html#desktop">desktop</A>()-&gt;height() &gt; 366 )
        scribble.<A href="http://doc.trolltech.com/3.0/qwidget.html#show">show</A>();
    else
<A name=x792></A>        scribble.<A href="http://doc.trolltech.com/3.0/qwidget.html#showMaximized">showMaximized</A>();
    return a.<A href="http://doc.trolltech.com/3.0/qapplication.html#exec">exec</A>();
}
</PRE>
<P>See also <A href="http://doc.trolltech.com/3.0/examples.html">Examples</A>. <!-- eof -->
<P>
<ADDRESS>
<HR>

<DIV align=center>
<TABLE border=0 cellSpacing=0 width="100%">
  <TBODY>
  <TR>
    <TD>Copyright © 2002 <A href="http://www.trolltech.com/">Trolltech</A>
    <TD><A href="http://www.trolltech.com/trademarks.html">Trademarks</A> 
    <TD align=right>
      <DIV align=right>Qt version 
3.0.6</DIV></TR></TBODY></TABLE></DIV></ADDRESS></BODY></HTML>
