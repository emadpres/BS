Microsoft (R) Macro Assembler Version 6.11		    10/23/10 00:56:12
example.asm						     Page 1 - 1


				; Example assembly language program -- adds two numbers
				; Author:  R. Detmer
				; Date:    revised 7/97

				.386
				.MODEL FLAT

				ExitProcess PROTO NEAR32 stdcall, dwExitCode:DWORD

				INCLUDE io.h            ; header file for input/output
			      C ; IO.H -- header file for I/O macros
			      C ; 32-bit version for flat memory model
			      C ; R. Detmer   last revised 8/2000
			      C .NOLIST     ; turn off listing
			      C .LIST        ; begin listing
			      C 

 = 0000000D			cr      EQU     0dh     ; carriage return character
 = 0000000A			Lf      EQU     0ah     ; line feed

				.STACK  4096            ; reserve 4096-byte stack

 00000000			.DATA                   ; reserve storage for data

 00000000 00000000		number1 DWORD   ?
 00000004 00000000		number2 DWORD   ?
 00000008 45 6E 74 65 72	prompt1 BYTE    "Enter first number:  ", 0
	   20 66 69 72 73
	   74 20 6E 75 6D
	   62 65 72 3A 20
	   20 00
 0000001E 45 6E 74 65 72	prompt2 BYTE    "Enter second number:  ", 0
	   20 73 65 63 6F
	   6E 64 20 6E 75
	   6D 62 65 72 3A
	   20 20 00
 00000035  00000028 [		string  BYTE    40 DUP (?)
	    00
	   ]
 0000005D 0D 0A 54 68 65	label1  BYTE    cr, Lf, "The sum is "
	   20 73 75 6D 20
	   69 73 20
 0000006A  000003E8 [		sum     BYTE    1000 DUP (12h)
	    12
	   ]
 00000452  0D 0A 00		        BYTE    cr, Lf, 0

 00000000			.CODE                           ; start of main program code
 00000000			_start:
				        output  prompt1         ; prompt for first number
				        input   string, 40      ; read ASCII characters
				        atod    string          ; convert to integer
 0000002E  A3 00000000 R	        mov     number1, eax    ; store in memory

				        output  prompt2         ; repeat for second number
				        input   string, 40
				        atod    string
 00000061  A3 00000004 R	        mov     number2, eax
				        
 00000066  A1 00000000 R	        mov     eax, number1    ; first number to EAX
 0000006B  03 05 00000004 R	        add     eax, number2    ; add second number
				        dtoa    sum, eax        ; convert to ASCII characters
				        output  label1          ; output label and sum

				        INVOKE  ExitProcess, 0  ; exit with return code 0

 00000097			PUBLIC _start                   ; make entry point public

				END                             ; end of source code

Microsoft (R) Macro Assembler Version 6.11		    10/23/10 00:56:12
example.asm						     Symbols 2 - 1




Macros:

                N a m e                 Type

atod . . . . . . . . . . . . . .	Proc
atoi . . . . . . . . . . . . . .	Proc
dtoa . . . . . . . . . . . . . .	Proc
input  . . . . . . . . . . . . .	Proc
itoa . . . . . . . . . . . . . .	Proc
output . . . . . . . . . . . . .	Proc


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 DWord	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 00000455 DWord	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 00000097 DWord	  Public  'CODE'	


Procedures,  parameters and locals:

                N a m e                 Type     Value    Attr

$$$$$$00001  . . . . . . . . . .	P Near	 00000001 _TEXT	Length= 00000096 Private
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000000h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
Lf . . . . . . . . . . . . . . .	Number	 0000000Ah   
_start . . . . . . . . . . . . .	L Near	 00000000 _TEXT	Public
atodproc . . . . . . . . . . . .	L Near	 00000000 FLAT	External
atoiproc . . . . . . . . . . . .	L Near	 00000000 FLAT	External
cr . . . . . . . . . . . . . . .	Number	 0000000Dh   
dtoaproc . . . . . . . . . . . .	L Near	 00000000 FLAT	External
inproc . . . . . . . . . . . . .	L Near	 00000000 FLAT	External
itoaproc . . . . . . . . . . . .	L Near	 00000000 FLAT	External
label1 . . . . . . . . . . . . .	Byte	 0000005D _DATA	
number1  . . . . . . . . . . . .	DWord	 00000000 _DATA	
number2  . . . . . . . . . . . .	DWord	 00000004 _DATA	
outproc  . . . . . . . . . . . .	L Near	 00000000 FLAT	External
prompt1  . . . . . . . . . . . .	Byte	 00000008 _DATA	
prompt2  . . . . . . . . . . . .	Byte	 0000001E _DATA	
string . . . . . . . . . . . . .	Byte	 00000035 _DATA	
sum  . . . . . . . . . . . . . .	Byte	 0000006A _DATA	

	   0 Warnings
	   0 Errors
