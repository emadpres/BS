#include "OurPlayer.h"
#include "OthelloBoard.h"
#include "MainTasks.cpp"
#include <QDateTime>

OurPlayer::OurPlayer(OthelloBoard* board,STATE turn, int depth):OthelloPlayer(board,turn)
{
	qsrand((int)QDateTime::currentDateTime().toTime_t());
	OURTURN=turn;
	this->depth=depth;
}

QString OurPlayer::getName()
{
	return "Our Player!";
}

QList<QString> OurPlayer::getAuthors()
{
	return QList<QString>() <<"EA & PJ";
}

QPair<int,int> OurPlayer::nextPlay()
{
	OthelloAbstractBoard abstractBoard = board->getState();
	/*for(int i=0;i<GAMESIZE;i++)
		for(int j=0;j<GAMESIZE;j++)
			if(abstractBoard.canPlay(i,j))
				return QPair<int,int>(i,j); */
	Position p;
		for (int i=0; i<GAMESIZE; i++)
		for (int j=0; j<GAMESIZE; j++)
		{
			p.board[i][j] = EMPTY;
		}

	p.turn = turn;
	for(int i=0;i<GAMESIZE;i++)
		for(int j=0;j<GAMESIZE;j++)
			switch(abstractBoard.items[i][j])
			{
				case BLACK:
					p.board[i][j]= BLACK;
					break;
				case WHITE:
					p.board[i][j]= WHITE;				
					break;
				case EMPTY:
					p.board[i][j] = EMPTY;
					break;
				case HOLE:
					p.board[i][j] = EMPTY;
			}
	MOVE bestMove;
	bestMove = firstAlphabeta(&p,depth, -INFINITY, INFINITY);
	//cout << "best move here: \n" << bestMove.x << "\n" << " and\n "<< bestMove.y << "\n"; 
   return QPair<int,int>(bestMove.x,bestMove.y);//bestMove.x,bestMove.y);

}


